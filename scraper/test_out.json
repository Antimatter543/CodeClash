[
    {
        "title": "1. Two Sum",
        "details": "Given an array of integers nums\u00c2\u00a0and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. \u00c2",
        "examples": [
            {
                "input": "nums = [3,3], target = 6",
                "output": "[0,1]"
            }
        ],
        "constraints": [
            "",
            "2 <= nums.length <= 104",
            "-109 <= nums[i] <= 109",
            "-109 <= target <= 109",
            "Only one valid answer exists.",
            "",
            "\u00c2",
            "Follow-up:\u00c2\u00a0Can you come up with an algorithm that is less than\u00c2\u00a0O(n2)\u00c2\u00a0time complexity?"
        ]
    },
    {
        "title": "7. Reverse Integer",
        "details": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Assume the environment does not allow you to store 64-bit integers (signed or unsigned). \u00c2",
        "examples": [
            {
                "input": "x = 0",
                "output": "0"
            }
        ],
        "constraints": [
            "",
            "-231 <= x <= 231 - 1"
        ]
    },
    {
        "title": "9. Palindrome Number",
        "details": "Given an integer x, return true if x is palindrome integer. An integer is a palindrome when it reads the same backward as forward. For example, 121 is palindrome while 123 is not. \u00c2",
        "examples": [
            {
                "input": "x = -101",
                "output": "false"
            }
        ],
        "constraints": [
            "",
            "-231\u00c2\u00a0<= x <= 231\u00c2\u00a0- 1",
            "",
            "\u00c2",
            "Follow up: Could you solve it without converting the integer to a string?"
        ]
    },
    {
        "title": "13. Roman to Integer",
        "details": "Roman numerals are represented by seven different symbols:\u00c2\u00a0I, V, X, L, C, D and M. Symbol       Value I             1 V             5 X             10 L             50 C             100 D             500 M             1000 For example,\u00c2\u00a02 is written as II\u00c2\u00a0in Roman numeral, just two one's added together. 12 is written as\u00c2\u00a0XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II. Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:  I can be placed before V (5) and X (10) to make 4 and 9.\u00c2 X can be placed before L (50) and C (100) to make 40 and 90.\u00c2 C can be placed before D (500) and M (1000) to make 400 and 900.  Given a roman numeral, convert it to an integer. \u00c2",
        "examples": [
            {
                "input": "s = \"MCMXCIV\"",
                "output": "1994",
                "explanation": "M = 1000, CM = 900, XC = 90 and IV = 4."
            }
        ],
        "constraints": [
            "",
            "1 <= s.length <= 15",
            "s contains only\u00c2\u00a0the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M').",
            "It is guaranteed\u00c2\u00a0that s is a valid roman numeral in the range [1, 3999]."
        ]
    }
]